{"version":3,"sources":["CurrentTime.js","OpenStreetMap.js","Footer.js","App.js","index.js"],"names":["CurrentTime","className","format","interval","ticking","OpenStreetMap","LocationMarker","useState","position","setPosition","map","useMapEvents","click","locate","locationfound","e","latlng","flyTo","getZoom","Marker","Popup","id","MapContainer","center","lat","lng","zoom","scrollWheelZoom","TileLayer","attribution","url","Footer","style","bottom","left","fontSize","color","fontFamily","api","App","query","setQuery","weather","setWeather","console","log","main","temp","type","placeholder","onChange","target","value","onKeyPress","evt","key","fetch","then","res","json","result","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","humidity","temp_max","temp_min","wind","deg","speed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10e29b92.chunk.js","sourcesContent":["import React from 'react'\r\nimport Clock from \"react-live-clock\";\r\n\r\nconst CurrentTime = () => {\r\n    return (\r\n        <div className='date-sec'>\r\n              <Clock format=\"HH-mm-ss\" interval={1000} ticking={true}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentTime","import React,{useState} from 'react'\r\nimport { MapContainer,useMapEvents, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\nconst OpenStreetMap = () => {\r\n  function LocationMarker() {\r\n    const [position, setPosition] = useState(null)\r\n  \r\n    const map = useMapEvents({\r\n      click() {\r\n        map.locate()\r\n      },\r\n      locationfound(e) {\r\n        setPosition(e.latlng)\r\n        map.flyTo(e.latlng, map.getZoom())\r\n      },\r\n    })\r\n    return position === null ? null : (\r\n      \r\n      <Marker position={position}>\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    )\r\n  }\r\n  return (\r\n    <div id=\"map\">\r\n          <button className='btn'>Click The Map To Reach Your Location</button>\r\n       <MapContainer\r\n          center={{ lat: 48, lng: 14 }}\r\n          zoom={13}\r\n          scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n        <LocationMarker />\r\n      </MapContainer>,\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OpenStreetMap\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div style={{\r\n            position:'relative',\r\n            bottom:'10px',\r\n            left:'15px',\r\n            fontSize:'15px',\r\n            color:'white',\r\n            fontFamily: 'Fraunces'\r\n        }}>\r\n            <p>@Created By Abdur Rakib Rony</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\nimport CurrentTime from './CurrentTime'\nimport OpenStreetMap from './OpenStreetMap'\nimport Footer from './Footer'\n\nconst api = {\n  key: \"d7a6927b014ca7837a8de4094acaeab8\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  console.log(weather)\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n               <CurrentTime/>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}째c\n            </div>\n           <div className='des-weather'>\n              <div className='box1'>\n                  <p>Humidity: {weather.main.humidity} g/kg</p>\n                  <p>Max-Temperature: {weather.main.temp_max}째c</p>\n                  <p>Min-Temperature: {weather.main.temp_min}째c</p>\n              </div>\n              <div className='box2'>\n                  <p>Description: {weather.weather[0].main}</p>\n                  <p>Wind Direction: {weather.wind.deg}째</p>\n                  <p>Wind Speed: {weather.wind.speed}m/s</p>\n              </div>\n           </div>\n          </div>\n        </div>\n        ) : ('')}\n      </main>\n      <OpenStreetMap/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'leaflet/dist/leaflet.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}